{
	"info": {
		"_postman_id": "24483733-cefed589-9c3d-4dd5-9673-0e913981403e",
		"name": "LED Name Badge API",
		"description": "API for controlling the LED name badge\n\nIncludes a GET method to retrieve predefined icons and a POST method to send the actual text to be displayed",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Predefined Icons",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.eql(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required field 'icons'\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.icons).to.exist.and.to.be.an('array');",
							"});",
							"",
							"",
							"pm.test(\"Icons should be an array\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.icons).to.be.an('array');",
							"});",
							"",
							"",
							"pm.test(\"Each icon in the 'icons' array is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.have.property('icons').that.is.an('array');",
							"    responseData.icons.forEach(icon => {",
							"        pm.expect(icon).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Icon should not be empty\");",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "24483733-e3657ba0-49ff-41a1-b288-b56e0477d035",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/predefined-icons",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"predefined-icons"
					]
				}
			},
			"response": [
				{
					"id": "24483733-6ccd7ca2-aa58-47d3-ad81-3214755f692e",
					"name": "Get Predefined Icons",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/predefined-icons",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"predefined-icons"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.9.6",
							"enabled": true
						},
						{
							"key": "Date",
							"value": "Fri, 13 Jun 2025 14:44:41 GMT",
							"enabled": true
						},
						{
							"key": "Content-Type",
							"value": "application/json",
							"enabled": true
						},
						{
							"key": "Content-Length",
							"value": "173",
							"enabled": true
						},
						{
							"key": "Connection",
							"value": "close",
							"enabled": true
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n    \"icons\": [\n        \":ball:\",\n        \":happy:\",\n        \":happy2:\",\n        \":heart:\",\n        \":HEART:\",\n        \":heart2:\",\n        \":HEART2:\",\n        \":fablab:\",\n        \":bicycle:\",\n        \":bicycle_r:\",\n        \":owncloud:\",\n        \":octocat:\",\n        \":smile:\",\n        \":star:\",\n        \":sun:\"\n    ]\n}"
				}
			]
		},
		{
			"name": "Display Text",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.eql(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has required fields\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData).to.have.all.keys('status', 'text');",
							"});",
							"",
							"",
							"pm.test(\"Status must be a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.status).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Status should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Text must be a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.text).to.exist.and.to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Content-Type is application/json\", function () {",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.equal('application/json');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "24483733-cecafab5-4486-4d99-b880-586004df885a",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"text\": \"{{vault:azure-vault-secret}}\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/display-text",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"display-text"
					]
				}
			},
			"response": [
				{
					"id": "41094746-f81e0728-51ca-4c09-9876-521e24e44638",
					"name": "Display Text",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \":ball: :happy: :happy2: :heart: :HEART: :heart2: :HEART2: :fablab: :bicycle: :bicycle_r: :owncloud: Hello World!\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/display-text",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"display-text"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "Werkzeug/3.1.3 Python/3.9.6"
						},
						{
							"key": "Date",
							"value": "Fri, 13 Jun 2025 15:57:34 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Content-Length",
							"value": "157"
						},
						{
							"key": "Connection",
							"value": "close"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n    \"status\": \"Text displayed on LED\",\n    \"text\": \":ball: :happy: :happy2: :heart: :HEART: :heart2: :HEART2: :fablab: :bicycle: :bicycle_r: :owncloud: Hello World!\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "acd46579-7450-492e-b6fd-7eef2346fe8d",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "7c6cec08-ebcc-409d-847e-1c4be012c45d",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "094d87e7-f220-4ea1-a046-f203b8f14b6d",
			"key": "baseUrl",
			"value": "https://a84a2672-11fd-41e3-8f81-5127bca46a38.mock.pstmn.io",
			"type": "string"
		}
	]
}